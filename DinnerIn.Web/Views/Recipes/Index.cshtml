@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@model DinnerIn.Web.Models.ViewModels.RecipeDetailsViewModel

@{
    ViewData["Title"] = Model.PageTitle; 
}



<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6"></div>

        @if (Model != null)
        {
            <h1 class="mb-3">@Model.Heading</h1>

            <div class="d-flex justify-content-between mb-3">
                <span class="text-secondary">@Model.Chef</span>
                <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
            </div>

            <div class="mb-3">
                @if (signInManager.IsSignedIn(User))
                {
                    <a id="btnLike" style="cursor: pointer;">
                        <i class="bi bi-hand-thumbs-up"></i>
                    </a>
                }
                <span>@Model.TotalLikes </span>Likes
            </div>    

            <div class="mb-3 d-flex">
                @foreach (var tag in Model.Tags)
                {
                    <span class="badge bg-secondary me-1">@tag.Name</span>
                }
            </div>
            <img src="@Model.FeatureImageUrl" class="d-block img-fluid mb-3" />

            <div class="mb-3 recipe-details-content"> 
                @Html.Raw(Model.Content)
            </div>

        } else
        {
            <p>Recipe not found!</p>
        }
        <div>
    </div>
    </div>
</div>


@SectionWriters Scripts{
    <script>
        <script>
                const btnLikeElement = document.getElementById('btnLike');
        const totalLikeElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/blogpostlike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            })
                .then(data => data.json())
                .then(result => totalLikeElement.innerHTML = result);
        }


        async function addLikeForBlog() {
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@userManager.GetUserId(User)'
                })
            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeForBlog);
                getTotalLikes();
            });
        }


        btnLikeElement.addEventListener('click', addLikeForBlog);

    </script>
}